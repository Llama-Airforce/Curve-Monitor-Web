const c=t=>(t==null?void 0:t.host)??"https://prices.curve.finance",i=["ethereum","arbitrum","optimism","fantom","avalanche","xdai","matic","harmony","moonbeam","base","polygon","fraxtal"],u=t=>{const e=new URLSearchParams(Object.fromEntries(Object.entries(t).filter(([r,n])=>n!=null).map(([r,n])=>[r,n.toString()]))).toString();return e&&`?${e}`};class a extends Error{constructor(e,r){super(r),this.status=e}}async function h(t,e,r){const n=await fetch(t,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e),signal:r});if(!n.ok)throw new a(n.status,`Fetch error ${n.status} for URL: ${t}`);return await n.json()}const o=/[+-]\d{2}:?\d{2}$/;function f(t){if(typeof t=="number")return new Date(t*1e3);const e=Number(t);if(!Number.isNaN(e))return new Date(e*1e3);const n=t.endsWith("Z")||o.test(t)?t:`${t}Z`;return new Date(n)}const s=24*60*60;function b({end:t,start:e,daysRange:r=10}={}){return t??(t=Math.floor(Date.now()/1e3)),e??(e=t-r*s),{end:t,start:e}}export{a as F,b as a,u as b,i as c,h as f,c as g,f as t};
