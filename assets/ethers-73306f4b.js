import{a6 as ix,a4 as dx,a7 as sx,a8 as ox,a9 as bx,aa as lx,ab as ux,Z as hx,t as a0,z as O,y as e0,u as T,d as Te,c as V0,U as T0,ac as pe,x as f0,L as k,A as g,Y as E0,G as t0,W as ae,I as $0,E as o0,ad as _e,C as te,F as U0,ae as Pe,H as S0,B as Y,w as Be,i as Fe,P as K0,q as re,J as Re,af as J0,ag as M0,ah as px,ai as gx,aj as mx,ak as yx,al as vx,am as wx,an as Ex,ao as Sx,ap as Cx,o as Ax,aq as Tx,a as _x,b as Px,_ as Bx,S as Fx,ar as Rx,as as kx,at as Dx,D as Mx,N as Ox,au as Ix,X as Lx,g as Ux,T as Kx,O as Nx,Q as Gx,av as Wx}from"./index-52cb6942-302b6965.js";import{aH as zx,aT as ke,aU as Hx,aV as Vx,aW as N0,aX as De,aY as Me,aZ as Oe,c as _0,a_ as y0,r as Ie,s as b0,a$ as d0,S as j0,b0 as ce,af as ge,b1 as q0,T as I0,b2 as ne,b3 as $x,b4 as Jx,b5 as jx,b6 as qx,d as Zx,b7 as Qx,b8 as Xx,b9 as Yx,i as ea,n as xa,ba as aa,bb as ta,bc as ra,bd as ca,be as na,a as fa,b as ia,bf as da,aJ as sa,bg as oa}from"./lightweight-charts.production-e12c3aa7.js";const ba="Îž",la=Object.freeze(Object.defineProperty({__proto__:null,AddressZero:zx,EtherSymbol:ba,HashZero:ke,MaxInt256:ix,MaxUint256:dx,MinInt256:sx,NegativeOne:ox,One:bx,Two:lx,WeiPerEther:ux,Zero:hx},Symbol.toStringTag,{value:"Module"}));function ua(a){const e=a0(a);if(e.length>31)throw new Error("bytes32 string must be less than 32 bytes");return O(e0([e,ke]).slice(0,32))}function ha(a){const e=T(a);if(e.length!==32)throw new Error("invalid bytes32 - not 32 bytes long");if(e[31]!==0)throw new Error("invalid bytes32 string - no null terminator");let x=31;for(;e[x-1]===0;)x--;return Te(e.slice(0,x))}function pa(a){if(a.length%4!==0)throw new Error("bad data");let e=[];for(let x=0;x<a.length;x+=4)e.push(parseInt(a.substring(x,x+4),16));return e}function fe(a,e){e||(e=function(r){return[parseInt(r,16)]});let x=0,t={};return a.split(",").forEach(r=>{let o=r.split(":");x+=parseInt(o[0],16),t[x]=e(o[1])}),t}function Le(a){let e=0;return a.split(",").map(x=>{let t=x.split("-");t.length===1?t[1]="0":t[1]===""&&(t[1]="1");let r=e+parseInt(t[0],16);return e=parseInt(t[1],16),{l:r,h:e}})}function ie(a,e){let x=0;for(let t=0;t<e.length;t++){let r=e[t];if(x+=r.l,a>=x&&a<=x+r.h&&(a-x)%(r.d||1)===0){if(r.e&&r.e.indexOf(a-x)!==-1)continue;return r}}return null}const ga=Le("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),ma="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(a=>parseInt(a,16)),ya=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],va=fe("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),wa=fe("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),Ea=fe("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",pa),Sa=Le("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function Ca(a){return a.reduce((e,x)=>(x.forEach(t=>{e.push(t)}),e),[])}function Aa(a){return!!ie(a,ga)}function Ta(a){let e=ie(a,ya);if(e)return[a+e.s];let x=va[a];if(x)return x;let t=wa[a];if(t)return[a+t[0]];let r=Ea[a];return r||null}function _a(a){return!!ie(a,Sa)}function Pa(a){if(a.match(/^[a-z0-9-]*$/i)&&a.length<=59)return a.toLowerCase();let e=V0(a);e=Ca(e.map(t=>{if(ma.indexOf(t)>=0)return[];if(t>=65024&&t<=65039)return[];let r=Ta(t);return r||[t]})),e=V0(pe(e),T0.NFKC),e.forEach(t=>{if(_a(t))throw new Error("STRINGPREP_CONTAINS_PROHIBITED")}),e.forEach(t=>{if(Aa(t))throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")});let x=pe(e);if(x.substring(0,1)==="-"||x.substring(2,4)==="--"||x.substring(x.length-1)==="-")throw new Error("invalid hyphen");return x}const Ba=Object.freeze(Object.defineProperty({__proto__:null,decode:Hx,encode:Vx},Symbol.toStringTag,{value:"Module"})),Fa=`Ethereum Signed Message:
`;function de(a){return typeof a=="string"&&(a=a0(a)),f0(e0([a0(Fa),a0(String(a.length)),a]))}const Ra="contracts/5.7.0";var i0=globalThis&&globalThis.__awaiter||function(a,e,x,t){function r(o){return o instanceof x?o:new x(function(c){c(o)})}return new(x||(x=Promise))(function(o,c){function i(m){try{h(t.next(m))}catch(w){c(w)}}function l(m){try{h(t.throw(m))}catch(w){c(w)}}function h(m){m.done?o(m.value):r(m.value).then(i,l)}h((t=t.apply(a,e||[])).next())})};const D=new k(Ra),ka={chainId:!0,data:!0,from:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0,customData:!0,ccipReadEnabled:!0};function L0(a,e){return i0(this,void 0,void 0,function*(){const x=yield e;typeof x!="string"&&D.throwArgumentError("invalid address or ENS name","name",x);try{return t0(x)}catch{}a||D.throwError("a provider or signer is needed to resolve ENS names",k.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"});const t=yield a.resolveName(x);return t==null&&D.throwArgumentError("resolver or addr is not configured for ENS name","name",x),t})}function C0(a,e,x){return i0(this,void 0,void 0,function*(){return Array.isArray(x)?yield Promise.all(x.map((t,r)=>C0(a,Array.isArray(e)?e[r]:e[t.name],t))):x.type==="address"?yield L0(a,e):x.type==="tuple"?yield C0(a,e,x.components):x.baseType==="array"?Array.isArray(e)?yield Promise.all(e.map(t=>C0(a,t,x.arrayChildren))):Promise.reject(D.makeError("invalid value for array",k.errors.INVALID_ARGUMENT,{argument:"value",value:e})):e})}function G0(a,e,x){return i0(this,void 0,void 0,function*(){let t={};x.length===e.inputs.length+1&&typeof x[x.length-1]=="object"&&(t=o0(x.pop())),D.checkArgumentCount(x.length,e.inputs.length,"passed to contract"),a.signer?t.from?t.from=S0({override:L0(a.signer,t.from),signer:a.signer.getAddress()}).then(h=>i0(this,void 0,void 0,function*(){return t0(h.signer)!==h.override&&D.throwError("Contract with a Signer cannot override from",k.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"}),h.override})):t.from=a.signer.getAddress():t.from&&(t.from=L0(a.provider,t.from));const r=yield S0({args:C0(a.signer||a.provider,x,e.inputs),address:a.resolvedAddress,overrides:S0(t)||{}}),o=a.interface.encodeFunctionData(e,r.args),c={data:o,to:r.address},i=r.overrides;if(i.nonce!=null&&(c.nonce=Y.from(i.nonce).toNumber()),i.gasLimit!=null&&(c.gasLimit=Y.from(i.gasLimit)),i.gasPrice!=null&&(c.gasPrice=Y.from(i.gasPrice)),i.maxFeePerGas!=null&&(c.maxFeePerGas=Y.from(i.maxFeePerGas)),i.maxPriorityFeePerGas!=null&&(c.maxPriorityFeePerGas=Y.from(i.maxPriorityFeePerGas)),i.from!=null&&(c.from=i.from),i.type!=null&&(c.type=i.type),i.accessList!=null&&(c.accessList=Oe(i.accessList)),c.gasLimit==null&&e.gas!=null){let h=21e3;const m=T(o);for(let w=0;w<m.length;w++)h+=4,m[w]&&(h+=64);c.gasLimit=Y.from(e.gas).add(h)}if(i.value){const h=Y.from(i.value);!h.isZero()&&!e.payable&&D.throwError("non-payable method cannot override value",k.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:t.value}),c.value=h}i.customData&&(c.customData=o0(i.customData)),i.ccipReadEnabled&&(c.ccipReadEnabled=!!i.ccipReadEnabled),delete t.nonce,delete t.gasLimit,delete t.gasPrice,delete t.from,delete t.value,delete t.type,delete t.accessList,delete t.maxFeePerGas,delete t.maxPriorityFeePerGas,delete t.customData,delete t.ccipReadEnabled;const l=Object.keys(t).filter(h=>t[h]!=null);return l.length&&D.throwError(`cannot override ${l.map(h=>JSON.stringify(h)).join(",")}`,k.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:l}),c})}function Da(a,e){return function(...x){return G0(a,e,x)}}function Ma(a,e){const x=a.signer||a.provider;return function(...t){return i0(this,void 0,void 0,function*(){x||D.throwError("estimate require a provider or signer",k.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"});const r=yield G0(a,e,t);return yield x.estimateGas(r)})}}function Ue(a,e){const x=e.wait.bind(e);e.wait=t=>x(t).then(r=>(r.events=r.logs.map(o=>{let c=te(o),i=null;try{i=a.interface.parseLog(o)}catch{}return i&&(c.args=i.args,c.decode=(l,h)=>a.interface.decodeEventLog(i.eventFragment,l,h),c.event=i.name,c.eventSignature=i.signature),c.removeListener=()=>a.provider,c.getBlock=()=>a.provider.getBlock(r.blockHash),c.getTransaction=()=>a.provider.getTransaction(r.transactionHash),c.getTransactionReceipt=()=>Promise.resolve(r),c}),r))}function Ke(a,e,x){const t=a.signer||a.provider;return function(...r){return i0(this,void 0,void 0,function*(){let o;if(r.length===e.inputs.length+1&&typeof r[r.length-1]=="object"){const l=o0(r.pop());l.blockTag!=null&&(o=yield l.blockTag),delete l.blockTag,r.push(l)}a.deployTransaction!=null&&(yield a._deployed(o));const c=yield G0(a,e,r),i=yield t.call(c,o);try{let l=a.interface.decodeFunctionResult(e,i);return x&&e.outputs.length===1&&(l=l[0]),l}catch(l){throw l.code===k.errors.CALL_EXCEPTION&&(l.address=a.address,l.args=r,l.transaction=c),l}})}}function Oa(a,e){return function(...x){return i0(this,void 0,void 0,function*(){a.signer||D.throwError("sending a transaction requires a signer",k.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"}),a.deployTransaction!=null&&(yield a._deployed());const t=yield G0(a,e,x),r=yield a.signer.sendTransaction(t);return Ue(a,r),r})}}function me(a,e,x){return e.constant?Ke(a,e,x):Oa(a,e)}function Ne(a){return a.address&&(a.topics==null||a.topics.length===0)?"*":(a.address||"*")+"@"+(a.topics?a.topics.map(e=>Array.isArray(e)?e.join("|"):e).join(":"):"")}class P0{constructor(e,x){g(this,"tag",e),g(this,"filter",x),this._listeners=[]}addListener(e,x){this._listeners.push({listener:e,once:x})}removeListener(e){let x=!1;this._listeners=this._listeners.filter(t=>x||t.listener!==e?!0:(x=!0,!1))}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map(e=>e.listener)}listenerCount(){return this._listeners.length}run(e){const x=this.listenerCount();return this._listeners=this._listeners.filter(t=>{const r=e.slice();return setTimeout(()=>{t.listener.apply(this,r)},0),!t.once}),x}prepareEvent(e){}getEmit(e){return[e]}}class Ia extends P0{constructor(){super("error",null)}}class ye extends P0{constructor(e,x,t,r){const o={address:e};let c=x.getEventTopic(t);r?(c!==r[0]&&D.throwArgumentError("topic mismatch","topics",r),o.topics=r.slice()):o.topics=[c],super(Ne(o),o),g(this,"address",e),g(this,"interface",x),g(this,"fragment",t)}prepareEvent(e){super.prepareEvent(e),e.event=this.fragment.name,e.eventSignature=this.fragment.format(),e.decode=(x,t)=>this.interface.decodeEventLog(this.fragment,x,t);try{e.args=this.interface.decodeEventLog(this.fragment,e.data,e.topics)}catch(x){e.args=null,e.decodeError=x}}getEmit(e){const x=Pe(e.args);if(x.length)throw x[0].error;const t=(e.args||[]).slice();return t.push(e),t}}class ve extends P0{constructor(e,x){super("*",{address:e}),g(this,"address",e),g(this,"interface",x)}prepareEvent(e){super.prepareEvent(e);try{const x=this.interface.parseLog(e);e.event=x.name,e.eventSignature=x.signature,e.decode=(t,r)=>this.interface.decodeEventLog(x.eventFragment,t,r),e.args=x.args}catch{}}}class Ge{constructor(e,x,t){g(this,"interface",E0(new.target,"getInterface")(x)),t==null?(g(this,"provider",null),g(this,"signer",null)):N0.isSigner(t)?(g(this,"provider",t.provider||null),g(this,"signer",t)):De.isProvider(t)?(g(this,"provider",t),g(this,"signer",null)):D.throwArgumentError("invalid signer or provider","signerOrProvider",t),g(this,"callStatic",{}),g(this,"estimateGas",{}),g(this,"functions",{}),g(this,"populateTransaction",{}),g(this,"filters",{});{const c={};Object.keys(this.interface.events).forEach(i=>{const l=this.interface.events[i];g(this.filters,i,(...h)=>({address:this.address,topics:this.interface.encodeFilterTopics(l,h)})),c[l.name]||(c[l.name]=[]),c[l.name].push(i)}),Object.keys(c).forEach(i=>{const l=c[i];l.length===1?g(this.filters,i,this.filters[l[0]]):D.warn(`Duplicate definition of ${i} (${l.join(", ")})`)})}if(g(this,"_runningEvents",{}),g(this,"_wrappedEmits",{}),e==null&&D.throwArgumentError("invalid contract address or ENS name","addressOrName",e),g(this,"address",e),this.provider)g(this,"resolvedAddress",L0(this.provider,e));else try{g(this,"resolvedAddress",Promise.resolve(t0(e)))}catch{D.throwError("provider is required to use ENS name as contract address",k.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"})}this.resolvedAddress.catch(c=>{});const r={},o={};Object.keys(this.interface.functions).forEach(c=>{const i=this.interface.functions[c];if(o[c]){D.warn(`Duplicate ABI entry for ${JSON.stringify(c)}`);return}o[c]=!0;{const l=i.name;r[`%${l}`]||(r[`%${l}`]=[]),r[`%${l}`].push(c)}this[c]==null&&g(this,c,me(this,i,!0)),this.functions[c]==null&&g(this.functions,c,me(this,i,!1)),this.callStatic[c]==null&&g(this.callStatic,c,Ke(this,i,!0)),this.populateTransaction[c]==null&&g(this.populateTransaction,c,Da(this,i)),this.estimateGas[c]==null&&g(this.estimateGas,c,Ma(this,i))}),Object.keys(r).forEach(c=>{const i=r[c];if(i.length>1)return;c=c.substring(1);const l=i[0];try{this[c]==null&&g(this,c,this[l])}catch{}this.functions[c]==null&&g(this.functions,c,this.functions[l]),this.callStatic[c]==null&&g(this.callStatic,c,this.callStatic[l]),this.populateTransaction[c]==null&&g(this.populateTransaction,c,this.populateTransaction[l]),this.estimateGas[c]==null&&g(this.estimateGas,c,this.estimateGas[l])})}static getContractAddress(e){return ae(e)}static getInterface(e){return $0.isInterface(e)?e:new $0(e)}deployed(){return this._deployed()}_deployed(e){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then(()=>this):this._deployedPromise=this.provider.getCode(this.address,e).then(x=>(x==="0x"&&D.throwError("contract not deployed",k.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"}),this))),this._deployedPromise}fallback(e){this.signer||D.throwError("sending a transactions require a signer",k.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"});const x=o0(e||{});return["from","to"].forEach(function(t){x[t]!=null&&D.throwError("cannot override "+t,k.errors.UNSUPPORTED_OPERATION,{operation:t})}),x.to=this.resolvedAddress,this.deployed().then(()=>this.signer.sendTransaction(x))}connect(e){typeof e=="string"&&(e=new Me(e,this.provider));const x=new this.constructor(this.address,this.interface,e);return this.deployTransaction&&g(x,"deployTransaction",this.deployTransaction),x}attach(e){return new this.constructor(e,this.interface,this.signer||this.provider)}static isIndexed(e){return _e.isIndexed(e)}_normalizeRunningEvent(e){return this._runningEvents[e.tag]?this._runningEvents[e.tag]:e}_getRunningEvent(e){if(typeof e=="string"){if(e==="error")return this._normalizeRunningEvent(new Ia);if(e==="event")return this._normalizeRunningEvent(new P0("event",null));if(e==="*")return this._normalizeRunningEvent(new ve(this.address,this.interface));const x=this.interface.getEvent(e);return this._normalizeRunningEvent(new ye(this.address,this.interface,x))}if(e.topics&&e.topics.length>0){try{const t=e.topics[0];if(typeof t!="string")throw new Error("invalid topic");const r=this.interface.getEvent(t);return this._normalizeRunningEvent(new ye(this.address,this.interface,r,e.topics))}catch{}const x={address:this.address,topics:e.topics};return this._normalizeRunningEvent(new P0(Ne(x),x))}return this._normalizeRunningEvent(new ve(this.address,this.interface))}_checkRunningEvents(e){if(e.listenerCount()===0){delete this._runningEvents[e.tag];const x=this._wrappedEmits[e.tag];x&&e.filter&&(this.provider.off(e.filter,x),delete this._wrappedEmits[e.tag])}}_wrapEvent(e,x,t){const r=te(x);return r.removeListener=()=>{t&&(e.removeListener(t),this._checkRunningEvents(e))},r.getBlock=()=>this.provider.getBlock(x.blockHash),r.getTransaction=()=>this.provider.getTransaction(x.transactionHash),r.getTransactionReceipt=()=>this.provider.getTransactionReceipt(x.transactionHash),e.prepareEvent(r),r}_addEventListener(e,x,t){if(this.provider||D.throwError("events require a provider or a signer with a provider",k.errors.UNSUPPORTED_OPERATION,{operation:"once"}),e.addListener(x,t),this._runningEvents[e.tag]=e,!this._wrappedEmits[e.tag]){const r=o=>{let c=this._wrapEvent(e,o,x);if(c.decodeError==null)try{const i=e.getEmit(c);this.emit(e.filter,...i)}catch(i){c.decodeError=i.error}e.filter!=null&&this.emit("event",c),c.decodeError!=null&&this.emit("error",c.decodeError,c)};this._wrappedEmits[e.tag]=r,e.filter!=null&&this.provider.on(e.filter,r)}}queryFilter(e,x,t){const r=this._getRunningEvent(e),o=o0(r.filter);return typeof x=="string"&&U0(x,32)?(t!=null&&D.throwArgumentError("cannot specify toBlock with blockhash","toBlock",t),o.blockHash=x):(o.fromBlock=x??0,o.toBlock=t??"latest"),this.provider.getLogs(o).then(c=>c.map(i=>this._wrapEvent(r,i,null)))}on(e,x){return this._addEventListener(this._getRunningEvent(e),x,!1),this}once(e,x){return this._addEventListener(this._getRunningEvent(e),x,!0),this}emit(e,...x){if(!this.provider)return!1;const t=this._getRunningEvent(e),r=t.run(x)>0;return this._checkRunningEvents(t),r}listenerCount(e){return this.provider?e==null?Object.keys(this._runningEvents).reduce((x,t)=>x+this._runningEvents[t].listenerCount(),0):this._getRunningEvent(e).listenerCount():0}listeners(e){if(!this.provider)return[];if(e==null){const x=[];for(let t in this._runningEvents)this._runningEvents[t].listeners().forEach(r=>{x.push(r)});return x}return this._getRunningEvent(e).listeners()}removeAllListeners(e){if(!this.provider)return this;if(e==null){for(const t in this._runningEvents){const r=this._runningEvents[t];r.removeAllListeners(),this._checkRunningEvents(r)}return this}const x=this._getRunningEvent(e);return x.removeAllListeners(),this._checkRunningEvents(x),this}off(e,x){if(!this.provider)return this;const t=this._getRunningEvent(e);return t.removeListener(x),this._checkRunningEvents(t),this}removeListener(e,x){return this.off(e,x)}}class Z0 extends Ge{}class La{constructor(e,x,t){let r=null;typeof x=="string"?r=x:Be(x)?r=O(x):x&&typeof x.object=="string"?r=x.object:r="!",r.substring(0,2)!=="0x"&&(r="0x"+r),(!U0(r)||r.length%2)&&D.throwArgumentError("invalid bytecode","bytecode",x),t&&!N0.isSigner(t)&&D.throwArgumentError("invalid signer","signer",t),g(this,"bytecode",r),g(this,"interface",E0(new.target,"getInterface")(e)),g(this,"signer",t||null)}getDeployTransaction(...e){let x={};if(e.length===this.interface.deploy.inputs.length+1&&typeof e[e.length-1]=="object"){x=o0(e.pop());for(const t in x)if(!ka[t])throw new Error("unknown transaction override "+t)}return["data","from","to"].forEach(t=>{x[t]!=null&&D.throwError("cannot override "+t,k.errors.UNSUPPORTED_OPERATION,{operation:t})}),x.value&&!Y.from(x.value).isZero()&&!this.interface.deploy.payable&&D.throwError("non-payable constructor cannot override value",k.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:x.value}),D.checkArgumentCount(e.length,this.interface.deploy.inputs.length," in Contract constructor"),x.data=O(e0([this.bytecode,this.interface.encodeDeploy(e)])),x}deploy(...e){return i0(this,void 0,void 0,function*(){let x={};e.length===this.interface.deploy.inputs.length+1&&(x=e.pop()),D.checkArgumentCount(e.length,this.interface.deploy.inputs.length," in Contract constructor");const t=yield C0(this.signer,e,this.interface.deploy.inputs);t.push(x);const r=this.getDeployTransaction(...t),o=yield this.signer.sendTransaction(r),c=E0(this.constructor,"getContractAddress")(o),i=E0(this.constructor,"getContract")(c,this.interface,this.signer);return Ue(i,o),g(i,"deployTransaction",o),i})}attach(e){return this.constructor.getContract(e,this.interface,this.signer)}connect(e){return new this.constructor(this.interface,this.bytecode,e)}static fromSolidity(e,x){e==null&&D.throwError("missing compiler output",k.errors.MISSING_ARGUMENT,{argument:"compilerOutput"}),typeof e=="string"&&(e=JSON.parse(e));const t=e.abi;let r=null;return e.bytecode?r=e.bytecode:e.evm&&e.evm.bytecode&&(r=e.evm.bytecode),new this(t,r,x)}static getInterface(e){return Z0.getInterface(e)}static getContractAddress(e){return ae(e)}static getContract(e,x,t){return new Z0(e,x,t)}}function se(a,e,x,t,r){a=T(a),e=T(e);let o,c=1;const i=new Uint8Array(t),l=new Uint8Array(e.length+4);l.set(e);let h,m;for(let w=1;w<=c;w++){l[e.length]=w>>24&255,l[e.length+1]=w>>16&255,l[e.length+2]=w>>8&255,l[e.length+3]=w&255;let _=T(_0(r,a,l));o||(o=_.length,m=new Uint8Array(o),c=Math.ceil(t/o),h=t-(c-1)*o),m.set(_);for(let p=1;p<x;p++){_=T(_0(r,a,_));for(let f=0;f<o;f++)m[f]^=_[f]}const W=(w-1)*o,x0=w===c?h:o;i.set(T(m).slice(0,x0),W)}return O(i)}const Ua="wordlists/5.7.0",Ka=new k(Ua);class v0{constructor(e){Ka.checkAbstract(new.target,v0),g(this,"locale",e)}split(e){return e.toLowerCase().split(/ +/g)}join(e){return e.join(" ")}static check(e){const x=[];for(let t=0;t<2048;t++){const r=e.getWord(t);if(t!==e.getWordIndex(r))return"0x";x.push(r)}return Fe(x.join(`
`)+`
`)}static register(e,x){x||(x=e.locale)}}const Na="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";let A0=null;function we(a){if(A0==null&&(A0=Na.replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),v0.check(a)!=="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"))throw A0=null,new Error("BIP39 Wordlist for en (English) FAILED")}class Ga extends v0{constructor(){super("en")}getWord(e){return we(this),A0[e]}getWordIndex(e){return we(this),A0.indexOf(e)}}const We=new Ga;v0.register(We);const Q0={en:We},Wa="hdnode/5.7.0",B0=new k(Wa),za=Y.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Ha=a0("Bitcoin seed"),p0=2147483648;function ze(a){return(1<<a)-1<<8-a}function Va(a){return(1<<a)-1}function D0(a){return re(O(a),32)}function Ee(a){return ce.encode(e0([a,K0(b0(b0(a)),0,4)]))}function oe(a){if(a==null)return Q0.en;if(typeof a=="string"){const e=Q0[a];return e==null&&B0.throwArgumentError("unknown locale","wordlist",a),e}return a}const u0={},l0="m/44'/60'/0'/0/0";class Z{constructor(e,x,t,r,o,c,i,l){if(e!==u0)throw new Error("HDNode constructor cannot be called directly");if(x){const h=new y0(x);g(this,"privateKey",h.privateKey),g(this,"publicKey",h.compressedPublicKey)}else g(this,"privateKey",null),g(this,"publicKey",O(t));g(this,"parentFingerprint",r),g(this,"fingerprint",K0(Ie(b0(this.publicKey)),0,4)),g(this,"address",d0(this.publicKey)),g(this,"chainCode",o),g(this,"index",c),g(this,"depth",i),l==null?(g(this,"mnemonic",null),g(this,"path",null)):typeof l=="string"?(g(this,"mnemonic",null),g(this,"path",l)):(g(this,"mnemonic",l),g(this,"path",l.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return Ee(e0([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",O(this.depth),this.parentFingerprint,re(O(this.index),4),this.chainCode,this.privateKey!=null?e0(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new Z(u0,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(e){if(e>4294967295)throw new Error("invalid index - "+String(e));let x=this.path;x&&(x+="/"+(e&~p0));const t=new Uint8Array(37);if(e&p0){if(!this.privateKey)throw new Error("cannot derive child of neutered node");t.set(T(this.privateKey),1),x&&(x+="'")}else t.set(T(this.publicKey));for(let w=24;w>=0;w-=8)t[33+(w>>3)]=e>>24-w&255;const r=T(_0(j0.sha512,this.chainCode,t)),o=r.slice(0,32),c=r.slice(32);let i=null,l=null;this.privateKey?i=D0(Y.from(o).add(this.privateKey).mod(za)):l=new y0(O(o))._addPoint(this.publicKey);let h=x;const m=this.mnemonic;return m&&(h=Object.freeze({phrase:m.phrase,path:x,locale:m.locale||"en"})),new Z(u0,i,l,this.fingerprint,D0(c),e,this.depth+1,h)}derivePath(e){const x=e.split("/");if(x.length===0||x[0]==="m"&&this.depth!==0)throw new Error("invalid path - "+e);x[0]==="m"&&x.shift();let t=this;for(let r=0;r<x.length;r++){const o=x[r];if(o.match(/^[0-9]+'$/)){const c=parseInt(o.substring(0,o.length-1));if(c>=p0)throw new Error("invalid path index - "+o);t=t._derive(p0+c)}else if(o.match(/^[0-9]+$/)){const c=parseInt(o);if(c>=p0)throw new Error("invalid path index - "+o);t=t._derive(c)}else throw new Error("invalid path component - "+o)}return t}static _fromSeed(e,x){const t=T(e);if(t.length<16||t.length>64)throw new Error("invalid seed");const r=T(_0(j0.sha512,Ha,t));return new Z(u0,D0(r.slice(0,32)),null,"0x00000000",D0(r.slice(32)),0,0,x)}static fromMnemonic(e,x,t){return t=oe(t),e=R0(F0(e,t),t),Z._fromSeed(be(e,x),{phrase:e,path:"m",locale:t.locale})}static fromSeed(e){return Z._fromSeed(e,null)}static fromExtendedKey(e){const x=ce.decode(e);(x.length!==82||Ee(x.slice(0,78))!==e)&&B0.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const t=x[4],r=O(x.slice(5,9)),o=parseInt(O(x.slice(9,13)).substring(2),16),c=O(x.slice(13,45)),i=x.slice(45,78);switch(O(x.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new Z(u0,null,O(i),r,c,o,t,null);case"0x0488ade4":case"0x04358394 ":if(i[0]!==0)break;return new Z(u0,O(i.slice(1)),null,r,c,o,t,null)}return B0.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function be(a,e){e||(e="");const x=a0("mnemonic"+e,T0.NFKD);return se(a0(a,T0.NFKD),x,2048,64,"sha512")}function F0(a,e){e=oe(e),B0.checkNormalize();const x=e.split(a);if(x.length%3!==0)throw new Error("invalid mnemonic");const t=T(new Uint8Array(Math.ceil(11*x.length/8)));let r=0;for(let h=0;h<x.length;h++){let m=e.getWordIndex(x[h].normalize("NFKD"));if(m===-1)throw new Error("invalid mnemonic");for(let w=0;w<11;w++)m&1<<10-w&&(t[r>>3]|=1<<7-r%8),r++}const o=32*x.length/3,c=x.length/3,i=ze(c);if((T(b0(t.slice(0,o/8)))[0]&i)!==(t[t.length-1]&i))throw new Error("invalid checksum");return O(t.slice(0,o/8))}function R0(a,e){if(e=oe(e),a=T(a),a.length%4!==0||a.length<16||a.length>32)throw new Error("invalid entropy");const x=[0];let t=11;for(let c=0;c<a.length;c++)t>8?(x[x.length-1]<<=8,x[x.length-1]|=a[c],t-=8):(x[x.length-1]<<=t,x[x.length-1]|=a[c]>>8-t,x.push(a[c]&Va(8-t)),t+=3);const r=a.length/4,o=T(b0(a))[0]&ze(r);return x[x.length-1]<<=r,x[x.length-1]|=o>>8-r,e.join(x.map(c=>e.getWord(c)))}function He(a,e){try{return F0(a,e),!0}catch{}return!1}function Ve(a){return(typeof a!="number"||a<0||a>=p0||a%1)&&B0.throwArgumentError("invalid account index","index",a),`m/44'/60'/${a}'/0/0`}const ht=Object.freeze(Object.defineProperty({__proto__:null,HDNode:Z,defaultPath:l0,entropyToMnemonic:R0,getAccountPath:Ve,isValidMnemonic:He,mnemonicToEntropy:F0,mnemonicToSeed:be},Symbol.toStringTag,{value:"Module"})),$a="random/5.7.0",X0=new k($a);function Ja(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof ge<"u")return ge;throw new Error("unable to locate global object")}const Se=Ja();let O0=Se.crypto||Se.msCrypto;(!O0||!O0.getRandomValues)&&(X0.warn("WARNING: Missing strong random number source"),O0={getRandomValues:function(a){return X0.throwError("no secure random source avaialble",k.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});function m0(a){(a<=0||a>1024||a%1||a!=a)&&X0.throwArgumentError("invalid length","length",a);const e=new Uint8Array(a);return O0.getRandomValues(e),T(e)}var Y0={},ja={get exports(){return Y0},set exports(a){Y0=a}};(function(a,e){(function(x){function t(n){return parseInt(n)===n}function r(n){if(!t(n.length))return!1;for(var b=0;b<n.length;b++)if(!t(n[b])||n[b]<0||n[b]>255)return!1;return!0}function o(n,b){if(n.buffer&&ArrayBuffer.isView(n)&&n.name==="Uint8Array")return b&&(n.slice?n=n.slice():n=Array.prototype.slice.call(n)),n;if(Array.isArray(n)){if(!r(n))throw new Error("Array contains invalid value: "+n);return new Uint8Array(n)}if(t(n.length)&&r(n))return new Uint8Array(n);throw new Error("unsupported array-like object")}function c(n){return new Uint8Array(n)}function i(n,b,u,d,s){(d!=null||s!=null)&&(n.slice?n=n.slice(d,s):n=Array.prototype.slice.call(n,d,s)),b.set(n,u)}var l=function(){function n(u){var d=[],s=0;for(u=encodeURI(u);s<u.length;){var E=u.charCodeAt(s++);E===37?(d.push(parseInt(u.substr(s,2),16)),s+=2):d.push(E)}return o(d)}function b(u){for(var d=[],s=0;s<u.length;){var E=u[s];E<128?(d.push(String.fromCharCode(E)),s++):E>191&&E<224?(d.push(String.fromCharCode((E&31)<<6|u[s+1]&63)),s+=2):(d.push(String.fromCharCode((E&15)<<12|(u[s+1]&63)<<6|u[s+2]&63)),s+=3)}return d.join("")}return{toBytes:n,fromBytes:b}}(),h=function(){function n(d){for(var s=[],E=0;E<d.length;E+=2)s.push(parseInt(d.substr(E,2),16));return s}var b="0123456789abcdef";function u(d){for(var s=[],E=0;E<d.length;E++){var L=d[E];s.push(b[(L&240)>>4]+b[L&15])}return s.join("")}return{toBytes:n,fromBytes:u}}(),m={16:10,24:12,32:14},w=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],_=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],W=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],x0=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],p=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],f=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],y=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],C=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],S=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],A=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],v=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],F=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],M=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],R=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],H=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function N(n){for(var b=[],u=0;u<n.length;u+=4)b.push(n[u]<<24|n[u+1]<<16|n[u+2]<<8|n[u+3]);return b}var U=function(n){if(!(this instanceof U))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:o(n,!0)}),this._prepare()};U.prototype._prepare=function(){var n=m[this.key.length];if(n==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var b=0;b<=n;b++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var u=(n+1)*4,d=this.key.length/4,s=N(this.key),E,b=0;b<d;b++)E=b>>2,this._Ke[E][b%4]=s[b],this._Kd[n-E][b%4]=s[b];for(var L=0,B=d,P;B<u;){if(P=s[d-1],s[0]^=_[P>>16&255]<<24^_[P>>8&255]<<16^_[P&255]<<8^_[P>>24&255]^w[L]<<24,L+=1,d!=8)for(var b=1;b<d;b++)s[b]^=s[b-1];else{for(var b=1;b<d/2;b++)s[b]^=s[b-1];P=s[d/2-1],s[d/2]^=_[P&255]^_[P>>8&255]<<8^_[P>>16&255]<<16^_[P>>24&255]<<24;for(var b=d/2+1;b<d;b++)s[b]^=s[b-1]}for(var b=0,j,q;b<d&&B<u;)j=B>>2,q=B%4,this._Ke[j][q]=s[b],this._Kd[n-j][q]=s[b++],B++}for(var j=1;j<n;j++)for(var q=0;q<4;q++)P=this._Kd[j][q],this._Kd[j][q]=F[P>>24&255]^M[P>>16&255]^R[P>>8&255]^H[P&255]},U.prototype.encrypt=function(n){if(n.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var b=this._Ke.length-1,u=[0,0,0,0],d=N(n),s=0;s<4;s++)d[s]^=this._Ke[0][s];for(var E=1;E<b;E++){for(var s=0;s<4;s++)u[s]=x0[d[s]>>24&255]^p[d[(s+1)%4]>>16&255]^f[d[(s+2)%4]>>8&255]^y[d[(s+3)%4]&255]^this._Ke[E][s];d=u.slice()}for(var L=c(16),B,s=0;s<4;s++)B=this._Ke[b][s],L[4*s]=(_[d[s]>>24&255]^B>>24)&255,L[4*s+1]=(_[d[(s+1)%4]>>16&255]^B>>16)&255,L[4*s+2]=(_[d[(s+2)%4]>>8&255]^B>>8)&255,L[4*s+3]=(_[d[(s+3)%4]&255]^B)&255;return L},U.prototype.decrypt=function(n){if(n.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var b=this._Kd.length-1,u=[0,0,0,0],d=N(n),s=0;s<4;s++)d[s]^=this._Kd[0][s];for(var E=1;E<b;E++){for(var s=0;s<4;s++)u[s]=C[d[s]>>24&255]^S[d[(s+3)%4]>>16&255]^A[d[(s+2)%4]>>8&255]^v[d[(s+1)%4]&255]^this._Kd[E][s];d=u.slice()}for(var L=c(16),B,s=0;s<4;s++)B=this._Kd[b][s],L[4*s]=(W[d[s]>>24&255]^B>>24)&255,L[4*s+1]=(W[d[(s+3)%4]>>16&255]^B>>16)&255,L[4*s+2]=(W[d[(s+2)%4]>>8&255]^B>>8)&255,L[4*s+3]=(W[d[(s+1)%4]&255]^B)&255;return L};var Q=function(n){if(!(this instanceof Q))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new U(n)};Q.prototype.encrypt=function(n){if(n=o(n),n.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var b=c(n.length),u=c(16),d=0;d<n.length;d+=16)i(n,u,0,d,d+16),u=this._aes.encrypt(u),i(u,b,d);return b},Q.prototype.decrypt=function(n){if(n=o(n),n.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var b=c(n.length),u=c(16),d=0;d<n.length;d+=16)i(n,u,0,d,d+16),u=this._aes.decrypt(u),i(u,b,d);return b};var K=function(n,b){if(!(this instanceof K))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!b)b=c(16);else if(b.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=o(b,!0),this._aes=new U(n)};K.prototype.encrypt=function(n){if(n=o(n),n.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var b=c(n.length),u=c(16),d=0;d<n.length;d+=16){i(n,u,0,d,d+16);for(var s=0;s<16;s++)u[s]^=this._lastCipherblock[s];this._lastCipherblock=this._aes.encrypt(u),i(this._lastCipherblock,b,d)}return b},K.prototype.decrypt=function(n){if(n=o(n),n.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var b=c(n.length),u=c(16),d=0;d<n.length;d+=16){i(n,u,0,d,d+16),u=this._aes.decrypt(u);for(var s=0;s<16;s++)b[d+s]=u[s]^this._lastCipherblock[s];i(n,this._lastCipherblock,0,d,d+16)}return b};var z=function(n,b,u){if(!(this instanceof z))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!b)b=c(16);else if(b.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");u||(u=1),this.segmentSize=u,this._shiftRegister=o(b,!0),this._aes=new U(n)};z.prototype.encrypt=function(n){if(n.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var b=o(n,!0),u,d=0;d<b.length;d+=this.segmentSize){u=this._aes.encrypt(this._shiftRegister);for(var s=0;s<this.segmentSize;s++)b[d+s]^=u[s];i(this._shiftRegister,this._shiftRegister,0,this.segmentSize),i(b,this._shiftRegister,16-this.segmentSize,d,d+this.segmentSize)}return b},z.prototype.decrypt=function(n){if(n.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var b=o(n,!0),u,d=0;d<b.length;d+=this.segmentSize){u=this._aes.encrypt(this._shiftRegister);for(var s=0;s<this.segmentSize;s++)b[d+s]^=u[s];i(this._shiftRegister,this._shiftRegister,0,this.segmentSize),i(n,this._shiftRegister,16-this.segmentSize,d,d+this.segmentSize)}return b};var X=function(n,b){if(!(this instanceof X))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!b)b=c(16);else if(b.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=o(b,!0),this._lastPrecipherIndex=16,this._aes=new U(n)};X.prototype.encrypt=function(n){for(var b=o(n,!0),u=0;u<b.length;u++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),b[u]^=this._lastPrecipher[this._lastPrecipherIndex++];return b},X.prototype.decrypt=X.prototype.encrypt;var I=function(n){if(!(this instanceof I))throw Error("Counter must be instanitated with `new`");n!==0&&!n&&(n=1),typeof n=="number"?(this._counter=c(16),this.setValue(n)):this.setBytes(n)};I.prototype.setValue=function(n){if(typeof n!="number"||parseInt(n)!=n)throw new Error("invalid counter value (must be an integer)");for(var b=15;b>=0;--b)this._counter[b]=n%256,n=n>>8},I.prototype.setBytes=function(n){if(n=o(n,!0),n.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=n},I.prototype.increment=function(){for(var n=15;n>=0;n--)if(this._counter[n]===255)this._counter[n]=0;else{this._counter[n]++;break}};var $=function(n,b){if(!(this instanceof $))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",b instanceof I||(b=new I(b)),this._counter=b,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new U(n)};$.prototype.encrypt=function(n){for(var b=o(n,!0),u=0;u<b.length;u++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),b[u]^=this._remainingCounter[this._remainingCounterIndex++];return b},$.prototype.decrypt=$.prototype.encrypt;function c0(n){n=o(n,!0);var b=16-n.length%16,u=c(n.length+b);i(n,u);for(var d=n.length;d<u.length;d++)u[d]=b;return u}function J(n){if(n=o(n,!0),n.length<16)throw new Error("PKCS#7 invalid length");var b=n[n.length-1];if(b>16)throw new Error("PKCS#7 padding byte out of range");for(var u=n.length-b,d=0;d<b;d++)if(n[u+d]!==b)throw new Error("PKCS#7 invalid padding byte");var s=c(u);return i(n,s,0,0,u),s}var V={AES:U,Counter:I,ModeOfOperation:{ecb:Q,cbc:K,cfb:z,ofb:X,ctr:$},utils:{hex:h,utf8:l},padding:{pkcs7:{pad:c0,strip:J}},_arrayTest:{coerceArray:o,createArray:c,copyArray:i}};a.exports=V})()})(ja);const r0=Y0,$e="json-wallets/5.7.0";function s0(a){return typeof a=="string"&&a.substring(0,2)!=="0x"&&(a="0x"+a),T(a)}function w0(a,e){for(a=String(a);a.length<e;)a="0"+a;return a}function le(a){return typeof a=="string"?a0(a,T0.NFKC):T(a)}function G(a,e){let x=a;const t=e.toLowerCase().split("/");for(let r=0;r<t.length;r++){let o=null;for(const c in x)if(c.toLowerCase()===t[r]){o=x[c];break}if(o===null)return null;x=o}return x}function qa(a){const e=T(a);e[6]=e[6]&15|64,e[8]=e[8]&63|128;const x=O(e);return[x.substring(2,10),x.substring(10,14),x.substring(14,18),x.substring(18,22),x.substring(22,34)].join("-")}const Za=new k($e);class Qa extends Re{isCrowdsaleAccount(e){return!!(e&&e._isCrowdsaleAccount)}}function ue(a,e){const x=JSON.parse(a);e=le(e);const t=t0(G(x,"ethaddr")),r=s0(G(x,"encseed"));(!r||r.length%16!==0)&&Za.throwArgumentError("invalid encseed","json",a);const o=T(se(e,e,2e3,32,"sha256")).slice(0,16),c=r.slice(0,16),i=r.slice(16),l=new r0.ModeOfOperation.cbc(o,c),h=r0.padding.pkcs7.strip(T(l.decrypt(i)));let m="";for(let W=0;W<h.length;W++)m+=String.fromCharCode(h[W]);const w=a0(m),_=f0(w);return new Qa({_isCrowdsaleAccount:!0,address:t,privateKey:_})}function W0(a){let e=null;try{e=JSON.parse(a)}catch{return!1}return e.encseed&&e.ethaddr}function z0(a){let e=null;try{e=JSON.parse(a)}catch{return!1}return!(!e.version||parseInt(e.version)!==e.version||parseInt(e.version)!==3)}function Je(a){if(W0(a))try{return t0(JSON.parse(a).ethaddr)}catch{return null}if(z0(a))try{return t0(JSON.parse(a).address)}catch{return null}return null}var ee={},Xa={get exports(){return ee},set exports(a){ee=a}};(function(a,e){(function(x){function r(p){const f=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let y=1779033703,C=3144134277,S=1013904242,A=2773480762,v=1359893119,F=2600822924,M=528734635,R=1541459225;const H=new Uint32Array(64);function N($){let c0=0,J=$.length;for(;J>=64;){let V=y,n=C,b=S,u=A,d=v,s=F,E=M,L=R,B,P,j,q,k0;for(P=0;P<16;P++)j=c0+P*4,H[P]=($[j]&255)<<24|($[j+1]&255)<<16|($[j+2]&255)<<8|$[j+3]&255;for(P=16;P<64;P++)B=H[P-2],q=(B>>>17|B<<32-17)^(B>>>19|B<<32-19)^B>>>10,B=H[P-15],k0=(B>>>7|B<<32-7)^(B>>>18|B<<32-18)^B>>>3,H[P]=(q+H[P-7]|0)+(k0+H[P-16]|0)|0;for(P=0;P<64;P++)q=(((d>>>6|d<<32-6)^(d>>>11|d<<32-11)^(d>>>25|d<<32-25))+(d&s^~d&E)|0)+(L+(f[P]+H[P]|0)|0)|0,k0=((V>>>2|V<<32-2)^(V>>>13|V<<32-13)^(V>>>22|V<<32-22))+(V&n^V&b^n&b)|0,L=E,E=s,s=d,d=u+q|0,u=b,b=n,n=V,V=q+k0|0;y=y+V|0,C=C+n|0,S=S+b|0,A=A+u|0,v=v+d|0,F=F+s|0,M=M+E|0,R=R+L|0,c0+=64,J-=64}}N(p);let U,Q=p.length%64,K=p.length/536870912|0,z=p.length<<3,X=Q<56?56:120,I=p.slice(p.length-Q,p.length);for(I.push(128),U=Q+1;U<X;U++)I.push(0);return I.push(K>>>24&255),I.push(K>>>16&255),I.push(K>>>8&255),I.push(K>>>0&255),I.push(z>>>24&255),I.push(z>>>16&255),I.push(z>>>8&255),I.push(z>>>0&255),N(I),[y>>>24&255,y>>>16&255,y>>>8&255,y>>>0&255,C>>>24&255,C>>>16&255,C>>>8&255,C>>>0&255,S>>>24&255,S>>>16&255,S>>>8&255,S>>>0&255,A>>>24&255,A>>>16&255,A>>>8&255,A>>>0&255,v>>>24&255,v>>>16&255,v>>>8&255,v>>>0&255,F>>>24&255,F>>>16&255,F>>>8&255,F>>>0&255,M>>>24&255,M>>>16&255,M>>>8&255,M>>>0&255,R>>>24&255,R>>>16&255,R>>>8&255,R>>>0&255]}function o(p,f,y){p=p.length<=64?p:r(p);const C=64+f.length+4,S=new Array(C),A=new Array(64);let v,F=[];for(v=0;v<64;v++)S[v]=54;for(v=0;v<p.length;v++)S[v]^=p[v];for(v=0;v<f.length;v++)S[64+v]=f[v];for(v=C-4;v<C;v++)S[v]=0;for(v=0;v<64;v++)A[v]=92;for(v=0;v<p.length;v++)A[v]^=p[v];function M(){for(let R=C-1;R>=C-4;R--){if(S[R]++,S[R]<=255)return;S[R]=0}}for(;y>=32;)M(),F=F.concat(r(A.concat(r(S)))),y-=32;return y>0&&(M(),F=F.concat(r(A.concat(r(S))).slice(0,y))),F}function c(p,f,y,C,S){let A;for(m(p,(2*y-1)*16,S,0,16),A=0;A<2*y;A++)h(p,A*16,S,16),l(S,C),m(S,0,p,f+A*16,16);for(A=0;A<y;A++)m(p,f+A*2*16,p,A*16,16);for(A=0;A<y;A++)m(p,f+(A*2+1)*16,p,(A+y)*16,16)}function i(p,f){return p<<f|p>>>32-f}function l(p,f){m(p,0,f,0,16);for(let y=8;y>0;y-=2)f[4]^=i(f[0]+f[12],7),f[8]^=i(f[4]+f[0],9),f[12]^=i(f[8]+f[4],13),f[0]^=i(f[12]+f[8],18),f[9]^=i(f[5]+f[1],7),f[13]^=i(f[9]+f[5],9),f[1]^=i(f[13]+f[9],13),f[5]^=i(f[1]+f[13],18),f[14]^=i(f[10]+f[6],7),f[2]^=i(f[14]+f[10],9),f[6]^=i(f[2]+f[14],13),f[10]^=i(f[6]+f[2],18),f[3]^=i(f[15]+f[11],7),f[7]^=i(f[3]+f[15],9),f[11]^=i(f[7]+f[3],13),f[15]^=i(f[11]+f[7],18),f[1]^=i(f[0]+f[3],7),f[2]^=i(f[1]+f[0],9),f[3]^=i(f[2]+f[1],13),f[0]^=i(f[3]+f[2],18),f[6]^=i(f[5]+f[4],7),f[7]^=i(f[6]+f[5],9),f[4]^=i(f[7]+f[6],13),f[5]^=i(f[4]+f[7],18),f[11]^=i(f[10]+f[9],7),f[8]^=i(f[11]+f[10],9),f[9]^=i(f[8]+f[11],13),f[10]^=i(f[9]+f[8],18),f[12]^=i(f[15]+f[14],7),f[13]^=i(f[12]+f[15],9),f[14]^=i(f[13]+f[12],13),f[15]^=i(f[14]+f[13],18);for(let y=0;y<16;++y)p[y]+=f[y]}function h(p,f,y,C){for(let S=0;S<C;S++)y[S]^=p[f+S]}function m(p,f,y,C,S){for(;S--;)y[C++]=p[f++]}function w(p){if(!p||typeof p.length!="number")return!1;for(let f=0;f<p.length;f++){const y=p[f];if(typeof y!="number"||y%1||y<0||y>=256)return!1}return!0}function _(p,f){if(typeof p!="number"||p%1)throw new Error("invalid "+f);return p}function W(p,f,y,C,S,A,v){if(y=_(y,"N"),C=_(C,"r"),S=_(S,"p"),A=_(A,"dkLen"),y===0||y&y-1)throw new Error("N must be power of 2");if(y>2147483647/128/C)throw new Error("N too large");if(C>2147483647/128/S)throw new Error("r too large");if(!w(p))throw new Error("password must be an array or buffer");if(p=Array.prototype.slice.call(p),!w(f))throw new Error("salt must be an array or buffer");f=Array.prototype.slice.call(f);let F=o(p,f,S*128*C);const M=new Uint32Array(S*32*C);for(let d=0;d<M.length;d++){const s=d*4;M[d]=(F[s+3]&255)<<24|(F[s+2]&255)<<16|(F[s+1]&255)<<8|(F[s+0]&255)<<0}const R=new Uint32Array(64*C),H=new Uint32Array(32*C*y),N=32*C,U=new Uint32Array(16),Q=new Uint32Array(16),K=S*y*2;let z=0,X=null,I=!1,$=0,c0=0,J,V;const n=v?parseInt(1e3/C):4294967295,b=typeof setImmediate<"u"?setImmediate:setTimeout,u=function(){if(I)return v(new Error("cancelled"),z/K);let d;switch($){case 0:V=c0*32*C,m(M,V,R,0,N),$=1,J=0;case 1:d=y-J,d>n&&(d=n);for(let E=0;E<d;E++)m(R,0,H,(J+E)*N,N),c(R,N,C,U,Q);if(J+=d,z+=d,v){const E=parseInt(1e3*z/K);if(E!==X){if(I=v(null,z/K),I)break;X=E}}if(J<y)break;J=0,$=2;case 2:d=y-J,d>n&&(d=n);for(let E=0;E<d;E++){const L=(2*C-1)*16,B=R[L]&y-1;h(H,B*N,R,N),c(R,N,C,U,Q)}if(J+=d,z+=d,v){const E=parseInt(1e3*z/K);if(E!==X){if(I=v(null,z/K),I)break;X=E}}if(J<y)break;if(m(R,0,M,V,N),c0++,c0<S){$=0;break}F=[];for(let E=0;E<M.length;E++)F.push(M[E]>>0&255),F.push(M[E]>>8&255),F.push(M[E]>>16&255),F.push(M[E]>>24&255);const s=o(p,F,A);return v&&v(null,1,s),s}v&&b(u)};if(!v)for(;;){const d=u();if(d!=null)return d}u()}const x0={scrypt:function(p,f,y,C,S,A,v){return new Promise(function(F,M){let R=0;v&&v(0),W(p,f,y,C,S,A,function(H,N,U){if(H)M(H);else if(U)v&&R!==1&&v(1),F(new Uint8Array(U));else if(v&&N!==R)return R=N,v(N)})})},syncScrypt:function(p,f,y,C,S,A){return new Uint8Array(W(p,f,y,C,S,A))}};a.exports=x0})()})(Xa);const he=ee;var Ya=globalThis&&globalThis.__awaiter||function(a,e,x,t){function r(o){return o instanceof x?o:new x(function(c){c(o)})}return new(x||(x=Promise))(function(o,c){function i(m){try{h(t.next(m))}catch(w){c(w)}}function l(m){try{h(t.throw(m))}catch(w){c(w)}}function h(m){m.done?o(m.value):r(m.value).then(i,l)}h((t=t.apply(a,e||[])).next())})};const xe=new k($e);function Ce(a){return a!=null&&a.mnemonic&&a.mnemonic.phrase}class et extends Re{isKeystoreAccount(e){return!!(e&&e._isKeystoreAccount)}}function xt(a,e,x){if(G(a,"crypto/cipher")==="aes-128-ctr"){const r=s0(G(a,"crypto/cipherparams/iv")),o=new r0.Counter(r),c=new r0.ModeOfOperation.ctr(e,o);return T(c.decrypt(x))}return null}function je(a,e){const x=s0(G(a,"crypto/ciphertext"));if(O(f0(e0([e.slice(16,32),x]))).substring(2)!==G(a,"crypto/mac").toLowerCase())throw new Error("invalid password");const r=xt(a,e.slice(0,16),x);r||xe.throwError("unsupported cipher",k.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const o=e.slice(32,64),c=d0(r);if(a.address){let l=a.address.toLowerCase();if(l.substring(0,2)!=="0x"&&(l="0x"+l),t0(l)!==c)throw new Error("address mismatch")}const i={_isKeystoreAccount:!0,address:c,privateKey:O(r)};if(G(a,"x-ethers/version")==="0.1"){const l=s0(G(a,"x-ethers/mnemonicCiphertext")),h=s0(G(a,"x-ethers/mnemonicCounter")),m=new r0.Counter(h),w=new r0.ModeOfOperation.ctr(o,m),_=G(a,"x-ethers/path")||l0,W=G(a,"x-ethers/locale")||"en",x0=T(w.decrypt(l));try{const p=R0(x0,W),f=Z.fromMnemonic(p,null,W).derivePath(_);if(f.privateKey!=i.privateKey)throw new Error("mnemonic mismatch");i.mnemonic=f.mnemonic}catch(p){if(p.code!==k.errors.INVALID_ARGUMENT||p.argument!=="wordlist")throw p}}return new et(i)}function qe(a,e,x,t,r){return T(se(a,e,x,t,r))}function at(a,e,x,t,r){return Promise.resolve(qe(a,e,x,t,r))}function Ze(a,e,x,t,r){const o=le(e),c=G(a,"crypto/kdf");if(c&&typeof c=="string"){const i=function(l,h){return xe.throwArgumentError("invalid key-derivation function parameters",l,h)};if(c.toLowerCase()==="scrypt"){const l=s0(G(a,"crypto/kdfparams/salt")),h=parseInt(G(a,"crypto/kdfparams/n")),m=parseInt(G(a,"crypto/kdfparams/r")),w=parseInt(G(a,"crypto/kdfparams/p"));(!h||!m||!w)&&i("kdf",c),h&h-1&&i("N",h);const _=parseInt(G(a,"crypto/kdfparams/dklen"));return _!==32&&i("dklen",_),t(o,l,h,m,w,64,r)}else if(c.toLowerCase()==="pbkdf2"){const l=s0(G(a,"crypto/kdfparams/salt"));let h=null;const m=G(a,"crypto/kdfparams/prf");m==="hmac-sha256"?h="sha256":m==="hmac-sha512"?h="sha512":i("prf",m);const w=parseInt(G(a,"crypto/kdfparams/c")),_=parseInt(G(a,"crypto/kdfparams/dklen"));return _!==32&&i("dklen",_),x(o,l,w,_,h)}}return xe.throwArgumentError("unsupported key-derivation function","kdf",c)}function Qe(a,e){const x=JSON.parse(a),t=Ze(x,e,qe,he.syncScrypt);return je(x,t)}function Xe(a,e,x){return Ya(this,void 0,void 0,function*(){const t=JSON.parse(a),r=yield Ze(t,e,at,he.scrypt,x);return je(t,r)})}function Ye(a,e,x,t){try{if(t0(a.address)!==d0(a.privateKey))throw new Error("address/privateKey mismatch");if(Ce(a)){const f=a.mnemonic;if(Z.fromMnemonic(f.phrase,null,f.locale).derivePath(f.path||l0).privateKey!=a.privateKey)throw new Error("mnemonic mismatch")}}catch(f){return Promise.reject(f)}typeof x=="function"&&!t&&(t=x,x={}),x||(x={});const r=T(a.privateKey),o=le(e);let c=null,i=null,l=null;if(Ce(a)){const f=a.mnemonic;c=T(F0(f.phrase,f.locale||"en")),i=f.path||l0,l=f.locale||"en"}let h=x.client;h||(h="ethers.js");let m=null;x.salt?m=T(x.salt):m=m0(32);let w=null;if(x.iv){if(w=T(x.iv),w.length!==16)throw new Error("invalid iv")}else w=m0(16);let _=null;if(x.uuid){if(_=T(x.uuid),_.length!==16)throw new Error("invalid uuid")}else _=m0(16);let W=1<<17,x0=8,p=1;return x.scrypt&&(x.scrypt.N&&(W=x.scrypt.N),x.scrypt.r&&(x0=x.scrypt.r),x.scrypt.p&&(p=x.scrypt.p)),he.scrypt(o,m,W,x0,p,64,t).then(f=>{f=T(f);const y=f.slice(0,16),C=f.slice(16,32),S=f.slice(32,64),A=new r0.Counter(w),v=new r0.ModeOfOperation.ctr(y,A),F=T(v.encrypt(r)),M=f0(e0([C,F])),R={address:a.address.substring(2).toLowerCase(),id:qa(_),version:3,crypto:{cipher:"aes-128-ctr",cipherparams:{iv:O(w).substring(2)},ciphertext:O(F).substring(2),kdf:"scrypt",kdfparams:{salt:O(m).substring(2),n:W,dklen:32,p,r:x0},mac:M.substring(2)}};if(c){const H=m0(16),N=new r0.Counter(H),U=new r0.ModeOfOperation.ctr(S,N),Q=T(U.encrypt(c)),K=new Date,z=K.getUTCFullYear()+"-"+w0(K.getUTCMonth()+1,2)+"-"+w0(K.getUTCDate(),2)+"T"+w0(K.getUTCHours(),2)+"-"+w0(K.getUTCMinutes(),2)+"-"+w0(K.getUTCSeconds(),2)+".0Z";R["x-ethers"]={client:h,gethFilename:"UTC--"+z+"--"+R.address,mnemonicCounter:O(H).substring(2),mnemonicCiphertext:O(Q).substring(2),path:i,locale:l,version:"0.1"}}return JSON.stringify(R)})}function ex(a,e,x){if(W0(a)){x&&x(0);const t=ue(a,e);return x&&x(1),Promise.resolve(t)}return z0(a)?Xe(a,e,x):Promise.reject(new Error("invalid JSON wallet"))}function xx(a,e){if(W0(a))return ue(a,e);if(z0(a))return Qe(a,e);throw new Error("invalid JSON wallet")}const pt=Object.freeze(Object.defineProperty({__proto__:null,decryptCrowdsale:ue,decryptJsonWallet:ex,decryptJsonWalletSync:xx,decryptKeystore:Xe,decryptKeystoreSync:Qe,encryptKeystore:Ye,getJsonWalletAddress:Je,isCrowdsaleWallet:W0,isKeystoreWallet:z0},Symbol.toStringTag,{value:"Module"})),tt="wallet/5.7.0";var Ae=globalThis&&globalThis.__awaiter||function(a,e,x,t){function r(o){return o instanceof x?o:new x(function(c){c(o)})}return new(x||(x=Promise))(function(o,c){function i(m){try{h(t.next(m))}catch(w){c(w)}}function l(m){try{h(t.throw(m))}catch(w){c(w)}}function h(m){m.done?o(m.value):r(m.value).then(i,l)}h((t=t.apply(a,e||[])).next())})};const h0=new k(tt);function rt(a){return a!=null&&U0(a.privateKey,32)&&a.address!=null}function ct(a){const e=a.mnemonic;return e&&e.phrase}class n0 extends N0{constructor(e,x){if(super(),rt(e)){const t=new y0(e.privateKey);if(g(this,"_signingKey",()=>t),g(this,"address",d0(this.publicKey)),this.address!==t0(e.address)&&h0.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),ct(e)){const r=e.mnemonic;g(this,"_mnemonic",()=>({phrase:r.phrase,path:r.path||l0,locale:r.locale||"en"}));const o=this.mnemonic,c=Z.fromMnemonic(o.phrase,null,o.locale).derivePath(o.path);d0(c.privateKey)!==this.address&&h0.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}else g(this,"_mnemonic",()=>null)}else{if(y0.isSigningKey(e))e.curve!=="secp256k1"&&h0.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),g(this,"_signingKey",()=>e);else{typeof e=="string"&&e.match(/^[0-9a-f]*$/i)&&e.length===64&&(e="0x"+e);const t=new y0(e);g(this,"_signingKey",()=>t)}g(this,"_mnemonic",()=>null),g(this,"address",d0(this.publicKey))}x&&!De.isProvider(x)&&h0.throwArgumentError("invalid provider","provider",x),g(this,"provider",x||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(e){return new n0(this,e)}signTransaction(e){return S0(e).then(x=>{x.from!=null&&(t0(x.from)!==this.address&&h0.throwArgumentError("transaction from address mismatch","transaction.from",e.from),delete x.from);const t=this._signingKey().signDigest(f0(q0(x)));return q0(x,t)})}signMessage(e){return Ae(this,void 0,void 0,function*(){return J0(this._signingKey().signDigest(de(e)))})}_signTypedData(e,x,t){return Ae(this,void 0,void 0,function*(){const r=yield I0.resolveNames(e,x,t,o=>(this.provider==null&&h0.throwError("cannot resolve ENS names without a provider",k.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:o}),this.provider.resolveName(o)));return J0(this._signingKey().signDigest(I0.hash(r.domain,x,r.value)))})}encrypt(e,x,t){if(typeof x=="function"&&!t&&(t=x,x={}),t&&typeof t!="function")throw new Error("invalid callback");return x||(x={}),Ye(this,e,x,t)}static createRandom(e){let x=m0(16);e||(e={}),e.extraEntropy&&(x=T(K0(f0(e0([x,e.extraEntropy])),0,16)));const t=R0(x,e.locale);return n0.fromMnemonic(t,e.path,e.locale)}static fromEncryptedJson(e,x,t){return ex(e,x,t).then(r=>new n0(r))}static fromEncryptedJsonSync(e,x){return new n0(xx(e,x))}static fromMnemonic(e,x,t){return x||(x=l0),new n0(Z.fromMnemonic(e,null,t).derivePath(x))}}function ax(a,e){return ne(de(a),e)}function tx(a,e,x,t){return ne(I0.hash(a,e,x),t)}const gt=Object.freeze(Object.defineProperty({__proto__:null,Wallet:n0,verifyMessage:ax,verifyTypedData:tx},Symbol.toStringTag,{value:"Module"})),nt="solidity/5.7.0",ft=new RegExp("^bytes([0-9]+)$"),it=new RegExp("^(u?int)([0-9]*)$"),dt=new RegExp("^(.*)\\[([0-9]*)\\]$"),st="0000000000000000000000000000000000000000000000000000000000000000",g0=new k(nt);function rx(a,e,x){switch(a){case"address":return x?M0(e,32):T(e);case"string":return a0(e);case"bytes":return T(e);case"bool":return e=e?"0x01":"0x00",x?M0(e,32):T(e)}let t=a.match(it);if(t){let r=parseInt(t[2]||"256");return(t[2]&&String(r)!==t[2]||r%8!==0||r===0||r>256)&&g0.throwArgumentError("invalid number type","type",a),x&&(r=256),e=Y.from(e).toTwos(r),M0(e,r/8)}if(t=a.match(ft),t){const r=parseInt(t[1]);return(String(r)!==t[1]||r===0||r>32)&&g0.throwArgumentError("invalid bytes type","type",a),T(e).byteLength!==r&&g0.throwArgumentError(`invalid value for ${a}`,"value",e),x?T((e+st).substring(0,66)):e}if(t=a.match(dt),t&&Array.isArray(e)){const r=t[1];parseInt(t[2]||String(e.length))!=e.length&&g0.throwArgumentError(`invalid array length for ${a}`,"value",e);const c=[];return e.forEach(function(i){c.push(rx(r,i,!0))}),e0(c)}return g0.throwArgumentError("invalid type","type",a)}function H0(a,e){a.length!=e.length&&g0.throwArgumentError("wrong number of values; expected ${ types.length }","values",e);const x=[];return a.forEach(function(t,r){x.push(rx(t,e[r]))}),O(e0(x))}function cx(a,e){return f0(H0(a,e))}function nx(a,e){return b0(H0(a,e))}const mt=Object.freeze(Object.defineProperty({__proto__:null,keccak256:cx,pack:H0,sha256:nx},Symbol.toStringTag,{value:"Module"})),ot=Object.freeze(Object.defineProperty({__proto__:null,AbiCoder:px,ConstructorFragment:gx,ErrorFragment:mx,EventFragment:yx,FormatTypes:vx,Fragment:wx,FunctionFragment:Ex,HDNode:Z,Indexed:_e,Interface:$0,LogDescription:Sx,Logger:k,ParamType:Cx,RLP:Ax,SigningKey:y0,get SupportedAlgorithm(){return j0},TransactionDescription:Tx,get TransactionTypes(){return $x},get UnicodeNormalizationForm(){return T0},Utf8ErrorFuncs:_x,get Utf8ErrorReason(){return Px},_TypedDataEncoder:I0,_fetchData:Jx,_toEscapedUtf8String:Bx,accessListify:Oe,arrayify:T,base58:ce,base64:Ba,checkProperties:Fx,checkResultErrors:Pe,commify:jx,computeAddress:d0,computeHmac:_0,computePublicKey:qx,concat:e0,deepCopy:te,defaultAbiCoder:Rx,defaultPath:l0,defineReadOnly:g,dnsEncode:Zx,entropyToMnemonic:R0,fetchJson:Qx,formatBytes32String:ua,formatEther:Xx,formatUnits:Yx,getAccountPath:Ve,getAddress:t0,getContractAddress:ae,getCreate2Address:kx,getIcapAddress:Dx,getJsonWalletAddress:Je,getStatic:E0,hashMessage:de,hexConcat:Mx,hexDataLength:Ox,hexDataSlice:K0,hexStripZeros:Ix,hexValue:Lx,hexZeroPad:re,hexlify:O,id:Fe,isAddress:Ux,isBytes:Be,isBytesLike:Kx,isHexString:U0,isValidMnemonic:He,isValidName:ea,joinSignature:J0,keccak256:f0,mnemonicToEntropy:F0,mnemonicToSeed:be,namehash:xa,nameprep:Pa,parseBytes32String:ha,parseEther:aa,parseTransaction:ta,parseUnits:ra,poll:ca,randomBytes:m0,recoverAddress:ne,recoverPublicKey:na,resolveProperties:S0,ripemd160:Ie,serializeTransaction:q0,sha256:b0,sha512:fa,shallowCopy:o0,shuffled:ia,solidityKeccak256:cx,solidityPack:H0,soliditySha256:nx,splitSignature:Nx,stripZeros:Gx,toUtf8Bytes:a0,toUtf8CodePoints:V0,toUtf8String:Te,verifyMessage:ax,verifyTypedData:tx,zeroPad:M0},Symbol.toStringTag,{value:"Module"})),fx="ethers/5.7.2",bt=new k(fx),yt=Object.freeze(Object.defineProperty({__proto__:null,BaseContract:Ge,BigNumber:Y,Contract:Z0,ContractFactory:La,FixedNumber:da,Signer:N0,VoidSigner:Me,Wallet:n0,Wordlist:v0,constants:la,get errors(){return Wx},getDefaultProvider:sa,logger:bt,providers:oa,utils:ot,version:fx,wordlists:Q0},Symbol.toStringTag,{value:"Module"}));export{Ge as B,Z0 as C,n0 as W,ht as a,pt as b,mt as c,gt as d,yt as e,ua as f,La as g,de as h,v0 as i,la as j,bt as k,Ba as l,Fa as m,Pa as n,ha as p,m0 as r,ot as u,fx as v,Q0 as w};
