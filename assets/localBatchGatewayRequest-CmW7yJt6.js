import{B as l,D as w,E as b,F as y,G as A,H as g,J as h,K as F,A as E,l as N,L as m,M as P,N as R,O as f,P as I}from"./getAction-Dslkj-4O.js";function q(n){const{abi:r,data:a}=n,e=l(a,0,4),t=r.find(o=>o.type==="function"&&e===w(b(o)));if(!t)throw new y(e,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:t.name,args:"inputs"in t&&t.inputs&&t.inputs.length>0?A(t.inputs,l(a,4)):void 0}}const u="/docs/contract/encodeErrorResult";function p(n){const{abi:r,errorName:a,args:e}=n;let t=r[0];if(a){const c=g({abi:r,args:e,name:a});if(!c)throw new h(a,{docsPath:u});t=c}if(t.type!=="error")throw new h(void 0,{docsPath:u});const o=b(t),i=w(o);let s="0x";if(e&&e.length>0){if(!t.inputs)throw new F(t.name,{docsPath:u});s=E(t.inputs,e)}return N([i,s])}const d="/docs/contract/encodeFunctionResult";function G(n){const{abi:r,functionName:a,result:e}=n;let t=r[0];if(a){const i=g({abi:r,name:a});if(!i)throw new m(a,{docsPath:d});t=i}if(t.type!=="function")throw new m(void 0,{docsPath:d});if(!t.outputs)throw new P(t.name,{docsPath:d});const o=(()=>{if(t.outputs.length===0)return[];if(t.outputs.length===1)return[e];if(Array.isArray(e))return e;throw new R(e)})();return E(t.outputs,o)}const x="x-batch-gateway:true";async function B(n){const{data:r,ccipRequest:a}=n,{args:[e]}=q({abi:f,data:r}),t=[],o=[];return await Promise.all(e.map(async(i,s)=>{try{o[s]=await a(i),t[s]=!1}catch(c){t[s]=!0,o[s]=H(c)}})),G({abi:f,functionName:"query",result:[t,o]})}function H(n){return n.name==="HttpRequestError"&&n.status?p({abi:f,errorName:"HttpError",args:[n.status,n.shortMessage]}):p({abi:[I],errorName:"Error",args:["shortMessage"in n?n.shortMessage:n.message]})}export{B as a,x as l};
